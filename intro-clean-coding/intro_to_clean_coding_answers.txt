1. In your own words, explain what clean code is and why it is important.

A: Clean code is code with a clear and intuitive naming system; it should be apparent right away what a function or variable is or meant to accomplish, for example. Clean code also consists of code that does not repeat itself, and is never nested more than two levels deep to maintain condensed, less complex code.

2. Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.

A: Traffic light use code to respond to busier times of the day, perhaps, or to recognize a vehicle is inthe left turn lane. If this code wasn't created to an acceptable standard, people's lives could be in danger if the traffic light displayed the incorrect light color to drivers.

3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

A: If anything, I would at least change the function's name to be something more descriptive of what it's meant to accomplish. "Print Z" appears to be repeated, so I condensed the code a bit.


FUNCTION calcDegrees(x, y)     // Creating a new function

 IF y = "F" THEN               // Check if y is equal "F"

 SET z to (xâˆ’32) * (5/9)       // Formula to convert degrees fahrenheit to celsius   

 ELSE IF y = "C" THEN          // If y not equal to "F", check if equal to "C"

 SET z to x * 1.8000 + 32.00   // Formula to convert degrees celsius to fahrenheit

 END IF

 PRINT z                       // Print result

END FUNCTION


4. The code appears to be clean.


FUNCTION calcPercent(sum, total)

 IF NOT(total = 0) THEN

     SET percentage to sum / total * 100

 ELSE

   PRINT "Sorry, cannot divide by 0"

 END IF

 PRINT percentage

END FUNCTION


5. Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.

    a. The following function prints the subtotal of a customer's transaction and receives payment accordingly.

    A:


FUNCTION checkOutCustomer(subTotal, discountRate, paymentType)

    due = subTotal * discountRate + (subTotal * tax)

   CALL getPayment RETURNING amount

   IF paymentType = 'CASH' THEN

       PRINT "Change due: " + amount - due

   ELSE IF paymentType = 'CREDIT CARD' THEN

       PRINT "Your credit card has been charged: " + due  
       
 END IF

 PRINT "Your total due is: " + due

END FUNCTION


    b. The following function checks out a book if there are no issues with the guest's account.

    A:


FUNCTION checkoutBook(book, guest)

 IF guest.accountActive AND NOT guest.hasOverdueBooks AND guest.outstandingFees = 0 THEN

           APPEND book to guest.books

           SET book.status to "Checked Out"

           PRINT "Your books have been issued."

 ELSE

     PRINT "Unable to check out book."

 END IF

END FUNCTION


    c. The following class is a code snippet that should support the transactions a customer can perform at an ATM.

    A: The code looks clean to me.


6. Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum

A:

function findSquare(arr) {
	let sum = arr.reduce((prev, cur) => prev + cur);
	let sqrRoot = Math.sqrt(sum);
	
	if (Math.pow(sqrRoot, 2) === sum) {
		return sqrRoot;
	} else {
		return sum;
	}
}

console.log(squareInt([10,1,4,6,1,1,2]));
console.log(squareInt([1,1]));


7. Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

A:

function findDuplicate(arr) {
    let sortedArr = arr.sort((a,b) => a - b);

	for (let i=0; i<sortedArr.length; i++) {
		return sortedArr[i] === sortedArr[i+1];
	}
}

console.log(findDuplicate([2,5,1,13,8,5,9]));
console.log(findDuplicate([2,5,1,13,8,16,9]));